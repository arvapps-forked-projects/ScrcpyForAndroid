# compiler: R8
# compiler_version: 8.0.35
# min_api: 21
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.1"}
# pg_map_id: 24b857c
# pg_map_hash: SHA-256 24b857ce05eeeb4b2f745a24690a34e5098d194020fb0fb3e9bc46b54b73d8ab
android.view.IRotationWatcher$Stub -> android.view.IRotationWatcher$oOoOŞoOoO๓Ş:
org.lsposed.lsparanoid.Deobfuscator$scrcpyandroid$server -> oOoOŞoOoO๓Ş.oOoOŞoOoO๓Ş:
    java.lang.String[] chunks -> oOoOŞoOoO๓Ş
    0:65535:void <clinit>():0:0 -> <clinit>
    0:65535:java.lang.String getString(long):0:0 -> oOoOŞoOoO๓Ş
org.lsposed.lsparanoid.DeobfuscatorHelper -> oOoOŞoOoO๓Ş.oOOooşoOOooವş:
    0:65535:java.lang.String getString(long,java.lang.String[]):0:0 -> oOOooşoOOooವş
    0:65535:long getCharAt(int,java.lang.String[],long):0:0 -> oOoOŞoOoO๓Ş
org.lsposed.lsparanoid.RandomHelper -> oOoOŞoOoO๓Ş.O000oŠO000o͗Š:
    0:65535:long seed(long):0:0 -> O000oŠO000o͗Š
    0:65535:short rotl(short,int):0:0 -> oOOooşoOOooವş
    0:65535:long next(long):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.AudioEncoder -> oOOooşoOOooವş.oOOooşoOOooವş:
    int bitRate -> oOoOŞoOoO๓Ş
    org.server.scrcpy.audio.AudioCapture capture -> O000oŠO000o͗Š
    int runStatus -> O00ooťO00ooӂť
    java.lang.String MIMETYPE_AUDIO_AAC -> O0OOoŨO0OOoચŨ
    android.os.HandlerThread mediaCodecThread -> oOOooşoOOooವş
    java.lang.Object lock -> O0O0oŦO0O0oࢼŦ
    0:65535:void <clinit>():0:0 -> <clinit>
    0:65535:void <init>(int):0:0 -> <init>
    0:65535:void access$300(org.server.scrcpy.AudioEncoder,int):0:0 -> O000oŠO000o͗Š
    0:65535:void configure(android.media.MediaCodec,android.media.MediaFormat):0:0 -> O00ooťO00ooӂť
    0:65535:android.media.MediaCodec createCodec():0:0 -> O0O0oŦO0O0oࢼŦ
    0:65535:android.media.MediaFormat createFormat(int):0:0 -> O0OOoŨO0OOoચŨ
    0:65535:void end():0:0 -> O0Oo0ũO0Oo0ಒũ
    0:65535:void end(int):0:0 -> O0OooūO0Oooېū
    0:65535:void streamScreen(java.io.OutputStream):0:0 -> O0o00ŬO0o00̹Ŭ
    0:65535:boolean waitEnd():0:0 -> O0o0oůO0o0oͻů
    0:65535:void access$200(org.server.scrcpy.AudioEncoder):0:0 -> oOOooşoOOooವş
    0:65535:org.server.scrcpy.audio.AudioCapture access$100(org.server.scrcpy.AudioEncoder):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.AudioEncoder$$ExternalSyntheticApiModelOutline0 -> oOOooşoOOooವş.oOoOŞoOoO๓Ş:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:void org.server.scrcpy.AudioEncoder$$InternalSyntheticApiModelOutline$1$fe04ccbfdec9e8d94dbba096370b46a5c74c6d040eac18df82ab09be5f6c544f$0.m(android.media.MediaCodec,android.media.MediaCodec$Callback,android.os.Handler):0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.AudioEncoder$1 -> oOOooşoOOooವş.oOOooşoOOooವş$oOoOŞoOoO๓Ş:
org.server.scrcpy.AudioEncoder$EncoderCallback -> oOOooşoOOooವş.oOOooşoOOooವş$oOOooşoOOooವş:
    org.server.scrcpy.AudioEncoder this$0 -> O00ooťO00ooӂť
    android.media.MediaCodec$BufferInfo bufferInfo -> O000oŠO000o͗Š
    android.media.MediaCodec mediaCodec -> oOoOŞoOoO๓Ş
    java.io.OutputStream outputStream -> oOOooşoOOooವş
    1:1:void <init>(org.server.scrcpy.AudioEncoder,android.media.MediaCodec,java.io.OutputStream):0:0 -> <init>
    2:2:void <init>(org.server.scrcpy.AudioEncoder,android.media.MediaCodec,java.io.OutputStream,org.server.scrcpy.AudioEncoder$1):0:0 -> <init>
    0:65535:void onError(android.media.MediaCodec,android.media.MediaCodec$CodecException):0:0 -> onError
    0:65535:void onInputBufferAvailable(android.media.MediaCodec,int):0:0 -> onInputBufferAvailable
    0:65535:void onOutputBufferAvailable(android.media.MediaCodec,int,android.media.MediaCodec$BufferInfo):0:0 -> onOutputBufferAvailable
    0:65535:void onOutputFormatChanged(android.media.MediaCodec,android.media.MediaFormat):0:0 -> onOutputFormatChanged
org.server.scrcpy.Device -> org.server.scrcpy.Device:
    org.server.scrcpy.ScreenInfo screenInfo -> oOoOŞoOoO๓Ş
    org.server.scrcpy.Device$RotationListener rotationListener -> oOOooşoOOooವş
    0:65535:void <init>(org.server.scrcpy.Options):0:0 -> <init>
    0:65535:org.server.scrcpy.ScreenInfo access$002(org.server.scrcpy.Device,org.server.scrcpy.ScreenInfo):0:0 -> O000oŠO000o͗Š
    0:65535:org.server.scrcpy.Device$RotationListener access$100(org.server.scrcpy.Device):0:0 -> O00ooťO00ooӂť
    0:65535:org.server.scrcpy.ScreenInfo computeScreenInfo(int):0:0 -> O0O0oŦO0O0oࢼŦ
    0:65535:org.server.scrcpy.ScreenInfo getScreenInfo():0:0 -> O0OOoŨO0OOoચŨ
    0:65535:boolean injectInputEvent(android.view.InputEvent,int):0:0 -> O0Oo0ũO0Oo0ಒũ
    0:65535:boolean isScreenOn():0:0 -> O0OooūO0Oooېū
    0:65535:void registerRotationWatcher(android.view.IRotationWatcher):0:0 -> O0o00ŬO0o00̹Ŭ
    0:65535:void setRotationListener(org.server.scrcpy.Device$RotationListener):0:0 -> O0o0oůO0o0oͻů
    0:65535:org.server.scrcpy.ScreenInfo access$000(org.server.scrcpy.Device):0:0 -> oOOooşoOOooವş
    0:65535:android.graphics.Point NewgetPhysicalPoint(android.graphics.Point):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.Device$1 -> org.server.scrcpy.Device$oOoOŞoOoO๓Ş:
    org.server.scrcpy.Device this$0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.DisplayInfo -> oOOooşoOOooವş.O000oŠO000o͗Š:
    int rotation -> oOOooşoOOooವş
    org.server.scrcpy.Size size -> oOoOŞoOoO๓Ş
    0:65535:void <init>(org.server.scrcpy.Size,int):0:0 -> <init>
    0:65535:org.server.scrcpy.Size getSize():0:0 -> oOOooşoOOooವş
    0:65535:int getRotation():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.DroidConnection -> oOOooşoOOooವş.O00ooťO00ooӂť:
    java.net.Socket socket -> O000oŠO000o͗Š
    java.io.OutputStream outputStream -> oOoOŞoOoO๓Ş
    java.io.InputStream inputStream -> oOOooşoOOooವş
    0:65535:void <clinit>():0:0 -> <clinit>
    0:65535:void <init>(java.net.Socket):0:0 -> <init>
    0:65535:java.net.Socket listenAndAccept():0:0 -> O000oŠO000o͗Š
    0:65535:org.server.scrcpy.DroidConnection open(java.lang.String):0:0 -> O00ooťO00ooӂť
    0:65535:void close():0:0 -> close
    0:65535:java.io.OutputStream getOutputStream():0:0 -> oOOooşoOOooವş
    0:65535:int[] NewreceiveControlEvent():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.EventController -> oOOooşoOOooವş.O0O0oŦO0O0oࢼŦ:
    android.view.MotionEvent$PointerProperties[] pointerProperties -> O000oŠO000o͗Š
    android.view.MotionEvent$PointerCoords[] pointerCoords -> O00ooťO00ooӂť
    boolean proximity -> O0OooūO0Oooېū
    org.server.scrcpy.Device device -> oOoOŞoOoO๓Ş
    boolean hit -> O0Oo0ũO0Oo0ಒũ
    long lastMouseDown -> O0O0oŦO0O0oࢼŦ
    float then -> O0OOoŨO0OOoચŨ
    org.server.scrcpy.DroidConnection connection -> oOOooşoOOooವş
    0:65535:void <init>(org.server.scrcpy.Device,org.server.scrcpy.DroidConnection):0:0 -> <init>
    0:65535:boolean injectEvent(android.view.InputEvent):0:0 -> O000oŠO000o͗Š
    0:65535:boolean injectKeyEvent(int,int,int,int):0:0 -> O00ooťO00ooӂť
    0:65535:boolean injectKeycode(int):0:0 -> O0O0oŦO0O0oࢼŦ
    0:65535:void setPointerCoords(android.graphics.Point):0:0 -> O0OOoŨO0OOoચŨ
    0:65535:boolean turnScreenOn():0:0 -> O0Oo0ũO0Oo0ಒũ
    0:65535:void initPointer():0:0 -> oOOooşoOOooವş
    0:65535:void control():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.Ln -> oOOooşoOOooವş.O0OOoŨO0OOoચŨ:
    org.server.scrcpy.Ln$Level THRESHOLD -> oOOooşoOOooವş
    java.lang.String TAG -> oOoOŞoOoO๓Ş
    0:65535:void <clinit>():0:0 -> <clinit>
    0:65535:void e(java.lang.String,java.lang.Throwable):0:0 -> O000oŠO000o͗Š
    0:65535:void i(java.lang.String):0:0 -> O00ooťO00ooӂť
    0:65535:boolean isEnabled(org.server.scrcpy.Ln$Level):0:0 -> O0O0oŦO0O0oࢼŦ
    0:65535:void w(java.lang.String):0:0 -> O0OOoŨO0OOoચŨ
    0:65535:void e(java.lang.String):0:0 -> oOOooşoOOooವş
    0:65535:void d(java.lang.String):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.Ln$Level -> oOOooşoOOooವş.O0OOoŨO0OOoચŨ$oOoOŞoOoO๓Ş:
    org.server.scrcpy.Ln$Level ERROR -> O00ooťO00ooӂť
    org.server.scrcpy.Ln$Level WARN -> O000oŠO000o͗Š
    org.server.scrcpy.Ln$Level INFO -> oOOooşoOOooವş
    org.server.scrcpy.Ln$Level[] $VALUES -> O0O0oŦO0O0oࢼŦ
    org.server.scrcpy.Ln$Level DEBUG -> oOoOŞoOoO๓Ş
    0:65535:void <clinit>():0:0 -> <clinit>
    0:65535:void <init>(java.lang.String,int):0:0 -> <init>
    0:65535:org.server.scrcpy.Ln$Level[] $values():0:0 -> oOoOŞoOoO๓Ş
    0:65535:org.server.scrcpy.Ln$Level valueOf(java.lang.String):0:0 -> valueOf
    0:65535:org.server.scrcpy.Ln$Level[] values():0:0 -> values
org.server.scrcpy.Options -> oOOooşoOOooವş.O0Oo0ũO0Oo0ಒũ:
    boolean tunnelForward -> O000oŠO000o͗Š
    int maxSize -> oOoOŞoOoO๓Ş
    int bitRate -> oOOooşoOOooವş
    0:65535:void setBitRate(int):0:0 -> O000oŠO000o͗Š
    0:65535:void setMaxSize(int):0:0 -> O00ooťO00ooӂť
    0:65535:void setTunnelForward(boolean):0:0 -> O0O0oŦO0O0oࢼŦ
    0:65535:int getMaxSize():0:0 -> oOOooşoOOooವş
    0:65535:int getBitRate():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.ScreenCapture -> org.server.scrcpy.oOoOŞoOoO๓Ş:
    org.server.scrcpy.Device device -> oOoOŞoOoO๓Ş
    android.os.IBinder display -> oOOooşoOOooವş
    android.hardware.display.VirtualDisplay virtualDisplay -> O000oŠO000o͗Š
    0:65535:void setDisplaySurface(android.os.IBinder,android.view.Surface,android.graphics.Rect,android.graphics.Rect):0:0 -> O000oŠO000o͗Š
    0:65535:void start(android.view.Surface):0:0 -> O00ooťO00ooӂť
    0:65535:void release():0:0 -> oOOooşoOOooವş
    0:65535:android.os.IBinder createDisplay():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.ScreenEncoder -> org.server.scrcpy.oOOooşoOOooವş:
    int frameRate -> O000oŠO000o͗Š
    java.util.concurrent.atomic.AtomicBoolean rotationChanged -> oOoOŞoOoO๓Ş
    int iFrameInterval -> O00ooťO00ooӂť
    int bitRate -> oOOooşoOOooವş
    1:1:void <init>(int):0:0 -> <init>
    2:2:void <init>(int,int,int):0:0 -> <init>
    0:65535:android.media.MediaCodec createCodec():0:0 -> O000oŠO000o͗Š
    0:65535:android.media.MediaFormat createFormat(int,int,int):0:0 -> O00ooťO00ooӂť
    0:65535:boolean encode(android.media.MediaCodec,java.io.OutputStream):0:0 -> O0O0oŦO0O0oࢼŦ
    0:65535:void setSize(android.media.MediaFormat,int,int):0:0 -> O0OOoŨO0OOoચŨ
    0:65535:void startAudioCapture(java.io.OutputStream):0:0 -> O0Oo0ũO0Oo0ಒũ
    0:65535:void streamScreen(org.server.scrcpy.Device,java.io.OutputStream):0:0 -> O0OooūO0Oooېū
    0:65535:boolean consumeRotationChange():0:0 -> oOOooşoOOooವş
    0:65535:void configure(android.media.MediaCodec,android.media.MediaFormat):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.ScreenEncoder$1 -> org.server.scrcpy.oOOooşoOOooವş$oOoOŞoOoO๓Ş:
    java.io.OutputStream val$outputStream -> oOoOŞoOoO๓Ş
    org.server.scrcpy.ScreenEncoder this$0 -> oOOooşoOOooವş
org.server.scrcpy.ScreenInfo -> oOOooşoOOooವş.O0OooūO0Oooېū:
    boolean rotated -> O000oŠO000o͗Š
    org.server.scrcpy.Size videoSize -> oOOooşoOOooವş
    org.server.scrcpy.Size deviceSize -> oOoOŞoOoO๓Ş
    0:65535:void <init>(org.server.scrcpy.Size,org.server.scrcpy.Size,boolean):0:0 -> <init>
    0:65535:org.server.scrcpy.ScreenInfo withRotation(int):0:0 -> O000oŠO000o͗Š
    0:65535:org.server.scrcpy.Size getVideoSize():0:0 -> oOOooşoOOooವş
    0:65535:org.server.scrcpy.Size getDeviceSize():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.Server -> org.server.scrcpy.Server:
    java.lang.String ip -> oOoOŞoOoO๓Ş
    0:65535:void startEventController(org.server.scrcpy.Device,org.server.scrcpy.DroidConnection):0:0 -> O000oŠO000o͗Š
    0:65535:void scrcpy(org.server.scrcpy.Options):0:0 -> oOOooşoOOooವş
    0:65535:org.server.scrcpy.Options createOptions(java.lang.String[]):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.Server$1 -> org.server.scrcpy.Server$oOoOŞoOoO๓Ş:
    org.server.scrcpy.Device val$device -> oOoOŞoOoO๓Ş
    org.server.scrcpy.DroidConnection val$connection -> oOOooşoOOooವş
    0:65535:void <init>(org.server.scrcpy.Device,org.server.scrcpy.DroidConnection):0:0 -> <init>
org.server.scrcpy.Server$2 -> org.server.scrcpy.Server$oOOooşoOOooವş:
org.server.scrcpy.Size -> oOOooşoOOooವş.O0o00ŬO0o00̹Ŭ:
    int width -> oOoOŞoOoO๓Ş
    int height -> oOOooşoOOooವş
    0:65535:void <init>(int,int):0:0 -> <init>
    0:65535:org.server.scrcpy.Size rotate():0:0 -> O000oŠO000o͗Š
    0:65535:android.graphics.Rect toRect():0:0 -> O00ooťO00ooӂť
    0:65535:boolean equals(java.lang.Object):0:0 -> equals
    0:65535:int hashCode():0:0 -> hashCode
    0:65535:int getWidth():0:0 -> oOOooşoOOooವş
    0:65535:int getHeight():0:0 -> oOoOŞoOoO๓Ş
    0:65535:java.lang.String toString():0:0 -> toString
org.server.scrcpy.audio.AudioCaptureException -> O000oŠO000o͗Š.oOoOŞoOoO๓Ş:
org.server.scrcpy.audio.AudioConfig -> O000oŠO000o͗Š.oOOooşoOOooವş:
    0:65535:android.media.AudioFormat createAudioFormat():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.audio.AudioDirectCapture -> O000oŠO000o͗Š.O0o0oůO0o0oͻů:
    int audioSource -> oOoOŞoOoO๓Ş
    android.media.AudioRecord recorder -> oOOooşoOOooವş
    org.server.scrcpy.audio.AudioRecordReader reader -> O000oŠO000o͗Š
    0:65535:void <init>(org.server.scrcpy.audio.AudioSource):0:0 -> <init>
    0:65535:void startRecording():0:0 -> O000oŠO000o͗Š
    0:65535:void startWorkaroundAndroid11():0:0 -> O00ooťO00ooӂť
    0:65535:void stopWorkaroundAndroid11():0:0 -> O0O0oŦO0O0oࢼŦ
    0:65535:void tryStartRecording(int,int):0:0 -> O0OOoŨO0OOoચŨ
    0:65535:void checkCompatibility():0:0 -> checkCompatibility
    0:65535:int getAudioSourceValue(org.server.scrcpy.audio.AudioSource):0:0 -> oOOooşoOOooವş
    0:65535:android.media.AudioRecord createAudioRecord(int):0:0 -> oOoOŞoOoO๓Ş
    0:65535:int read(java.nio.ByteBuffer,android.media.MediaCodec$BufferInfo):0:0 -> read
    0:65535:void start():0:0 -> start
    0:65535:void stop():0:0 -> stop
org.server.scrcpy.audio.AudioDirectCapture$$ExternalSyntheticApiModelOutline0 -> O000oŠO000o͗Š.O000oŠO000o͗Š:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:android.media.AudioRecord$Builder org.server.scrcpy.audio.AudioDirectCapture$$InternalSyntheticApiModelOutline$1$91d489e321349075d0156f1effedf9058da638e1c61b544393b60b19435ed48b$0.m(android.media.AudioRecord$Builder,android.content.Context):0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.audio.AudioDirectCapture$$ExternalSyntheticApiModelOutline1 -> O000oŠO000o͗Š.O00ooťO00ooӂť:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:android.media.AudioRecord$Builder org.server.scrcpy.audio.AudioDirectCapture$$InternalSyntheticApiModelOutline$1$91d489e321349075d0156f1effedf9058da638e1c61b544393b60b19435ed48b$1.m(android.media.AudioRecord$Builder,int):0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.audio.AudioDirectCapture$$ExternalSyntheticApiModelOutline2 -> O000oŠO000o͗Š.O0O0oŦO0O0oࢼŦ:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:android.media.AudioRecord$Builder org.server.scrcpy.audio.AudioDirectCapture$$InternalSyntheticApiModelOutline$1$91d489e321349075d0156f1effedf9058da638e1c61b544393b60b19435ed48b$2.m(android.media.AudioRecord$Builder,android.media.AudioFormat):0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.audio.AudioDirectCapture$$ExternalSyntheticApiModelOutline3 -> O000oŠO000o͗Š.O0OOoŨO0OOoચŨ:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:android.media.AudioRecord$Builder org.server.scrcpy.audio.AudioDirectCapture$$InternalSyntheticApiModelOutline$1$91d489e321349075d0156f1effedf9058da638e1c61b544393b60b19435ed48b$3.m(android.media.AudioRecord$Builder,int):0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.audio.AudioDirectCapture$$ExternalSyntheticApiModelOutline4 -> O000oŠO000o͗Š.O0Oo0ũO0Oo0ಒũ:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:android.media.AudioRecord org.server.scrcpy.audio.AudioDirectCapture$$InternalSyntheticApiModelOutline$1$91d489e321349075d0156f1effedf9058da638e1c61b544393b60b19435ed48b$4.m(android.media.AudioRecord$Builder):0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.audio.AudioDirectCapture$$ExternalSyntheticApiModelOutline5 -> O000oŠO000o͗Š.O0OooūO0Oooېū:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:android.media.AudioRecord$Builder org.server.scrcpy.audio.AudioDirectCapture$$InternalSyntheticApiModelOutline$4$91d489e321349075d0156f1effedf9058da638e1c61b544393b60b19435ed48b$0.m():0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.audio.AudioDirectCapture$$ExternalSyntheticApiModelOutline6 -> O000oŠO000o͗Š.O0o00ŬO0o00̹Ŭ:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:void org.server.scrcpy.audio.AudioDirectCapture$$InternalSyntheticApiModelOutline$4$91d489e321349075d0156f1effedf9058da638e1c61b544393b60b19435ed48b$1.m():0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.audio.AudioDirectCapture$1 -> O000oŠO000o͗Š.O0o0oůO0o0oͻů$oOoOŞoOoO๓Ş:
    int[] $SwitchMap$org$server$scrcpy$audio$AudioSource -> oOoOŞoOoO๓Ş
    0:65535:void <clinit>():0:0 -> <clinit>
org.server.scrcpy.audio.AudioRecordReader -> O000oŠO000o͗Š.O0oOOŲO0oOOࢲŲ:
    long previousPts -> O00ooťO00ooӂť
    long nextPts -> O0O0oŦO0O0oࢼŦ
    android.media.AudioRecord recorder -> oOoOŞoOoO๓Ş
    android.media.AudioTimestamp timestamp -> oOOooşoOOooವş
    long previousRecorderTimestamp -> O000oŠO000o͗Š
    0:65535:void <init>(android.media.AudioRecord):0:0 -> <init>
    0:65535:int read(java.nio.ByteBuffer,android.media.MediaCodec$BufferInfo):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.audio.AudioRecordReader$$ExternalSyntheticApiModelOutline0 -> O000oŠO000o͗Š.O0oO0űO0oO0ƙű:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:int org.server.scrcpy.audio.AudioRecordReader$$InternalSyntheticApiModelOutline$1$90078d49452f697e25ad9e4a6d1985cfd1d419889c1628150e324e29dd6be391$0.m(android.media.AudioRecord,android.media.AudioTimestamp,int):0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.audio.AudioSource -> O000oŠO000o͗Š.O0oOoųO0oOoৈų:
    org.server.scrcpy.audio.AudioSource[] $VALUES -> O0O0oŦO0O0oࢼŦ
    org.server.scrcpy.audio.AudioSource OUTPUT -> oOOooşoOOooವş
    org.server.scrcpy.audio.AudioSource PLAYBACK -> O00ooťO00ooӂť
    java.lang.String name -> oOoOŞoOoO๓Ş
    org.server.scrcpy.audio.AudioSource MIC -> O000oŠO000o͗Š
    0:65535:void <clinit>():0:0 -> <clinit>
    0:65535:void <init>(java.lang.String,int,java.lang.String):0:0 -> <init>
    0:65535:org.server.scrcpy.audio.AudioSource[] $values():0:0 -> oOoOŞoOoO๓Ş
    0:65535:org.server.scrcpy.audio.AudioSource valueOf(java.lang.String):0:0 -> valueOf
    0:65535:org.server.scrcpy.audio.AudioSource[] values():0:0 -> values
org.server.scrcpy.model.AudioPacket -> O00ooťO00ooӂť.oOoOŞoOoO๓Ş:
    byte[] data -> O00ooťO00ooӂť
    long presentationTimeStamp -> O000oŠO000o͗Š
    org.server.scrcpy.model.AudioPacket$Flag flag -> oOOooşoOOooವş
    0:65535:void <init>(org.server.scrcpy.model.MediaPacket$Type,org.server.scrcpy.model.AudioPacket$Flag,long,byte[]):0:0 -> <init>
    0:65535:byte[] toByteArray():0:0 -> oOOooşoOOooವş
    0:65535:byte[] toArray(org.server.scrcpy.model.MediaPacket$Type,org.server.scrcpy.model.AudioPacket$Flag,long,byte[]):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.model.AudioPacket$Flag -> O00ooťO00ooӂť.oOoOŞoOoO๓Ş$oOoOŞoOoO๓Ş:
    org.server.scrcpy.model.AudioPacket$Flag KEY_FRAME -> O000oŠO000o͗Š
    org.server.scrcpy.model.AudioPacket$Flag CONFIG -> O00ooťO00ooӂť
    org.server.scrcpy.model.AudioPacket$Flag[] $VALUES -> O0OOoŨO0OOoચŨ
    byte type -> oOoOŞoOoO๓Ş
    org.server.scrcpy.model.AudioPacket$Flag FRAME -> oOOooşoOOooವş
    org.server.scrcpy.model.AudioPacket$Flag END -> O0O0oŦO0O0oࢼŦ
    0:65535:void <clinit>():0:0 -> <clinit>
    0:65535:void <init>(java.lang.String,int,byte):0:0 -> <init>
    0:65535:byte getFlag():0:0 -> oOOooşoOOooವş
    0:65535:org.server.scrcpy.model.AudioPacket$Flag[] $values():0:0 -> oOoOŞoOoO๓Ş
    0:65535:org.server.scrcpy.model.AudioPacket$Flag valueOf(java.lang.String):0:0 -> valueOf
    0:65535:org.server.scrcpy.model.AudioPacket$Flag[] values():0:0 -> values
org.server.scrcpy.model.ByteUtils -> O00ooťO00ooӂť.oOOooşoOOooವş:
    0:65535:byte[] longToBytes(long):0:0 -> oOOooşoOOooವş
    0:65535:byte[] intToBytes(int):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.model.MediaPacket -> O00ooťO00ooӂť.O000oŠO000o͗Š:
    org.server.scrcpy.model.MediaPacket$Type type -> oOoOŞoOoO๓Ş
org.server.scrcpy.model.MediaPacket$Type -> O00ooťO00ooӂť.O000oŠO000o͗Š$oOoOŞoOoO๓Ş:
    org.server.scrcpy.model.MediaPacket$Type VIDEO -> oOOooşoOOooವş
    org.server.scrcpy.model.MediaPacket$Type[] $VALUES -> O00ooťO00ooӂť
    org.server.scrcpy.model.MediaPacket$Type AUDIO -> O000oŠO000o͗Š
    byte type -> oOoOŞoOoO๓Ş
    0:65535:void <clinit>():0:0 -> <clinit>
    0:65535:void <init>(java.lang.String,int,byte):0:0 -> <init>
    0:65535:byte getType():0:0 -> oOOooşoOOooವş
    0:65535:org.server.scrcpy.model.MediaPacket$Type[] $values():0:0 -> oOoOŞoOoO๓Ş
    0:65535:org.server.scrcpy.model.MediaPacket$Type valueOf(java.lang.String):0:0 -> valueOf
    0:65535:org.server.scrcpy.model.MediaPacket$Type[] values():0:0 -> values
org.server.scrcpy.model.VideoPacket -> O00ooťO00ooӂť.O00ooťO00ooӂť:
    byte[] data -> O00ooťO00ooӂť
    org.server.scrcpy.model.VideoPacket$Flag flag -> oOOooşoOOooವş
    long presentationTimeStamp -> O000oŠO000o͗Š
    0:65535:void <init>(org.server.scrcpy.model.MediaPacket$Type,org.server.scrcpy.model.VideoPacket$Flag,long,byte[]):0:0 -> <init>
    0:65535:byte[] toByteArray():0:0 -> oOOooşoOOooವş
    0:65535:byte[] toArray(org.server.scrcpy.model.MediaPacket$Type,org.server.scrcpy.model.VideoPacket$Flag,long,byte[]):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.model.VideoPacket$Flag -> O00ooťO00ooӂť.O00ooťO00ooӂť$oOoOŞoOoO๓Ş:
    org.server.scrcpy.model.VideoPacket$Flag KEY_FRAME -> O000oŠO000o͗Š
    org.server.scrcpy.model.VideoPacket$Flag FRAME -> oOOooşoOOooವş
    org.server.scrcpy.model.VideoPacket$Flag END -> O0O0oŦO0O0oࢼŦ
    org.server.scrcpy.model.VideoPacket$Flag[] $VALUES -> O0OOoŨO0OOoચŨ
    org.server.scrcpy.model.VideoPacket$Flag CONFIG -> O00ooťO00ooӂť
    byte type -> oOoOŞoOoO๓Ş
    0:65535:void <clinit>():0:0 -> <clinit>
    0:65535:void <init>(java.lang.String,int,byte):0:0 -> <init>
    0:65535:byte getFlag():0:0 -> oOOooşoOOooವş
    0:65535:org.server.scrcpy.model.VideoPacket$Flag[] $values():0:0 -> oOoOŞoOoO๓Ş
    0:65535:org.server.scrcpy.model.VideoPacket$Flag valueOf(java.lang.String):0:0 -> valueOf
    0:65535:org.server.scrcpy.model.VideoPacket$Flag[] values():0:0 -> values
org.server.scrcpy.util.FakeContext$$ExternalSyntheticApiModelOutline0 -> org.server.scrcpy.util.oOoOŞoOoO๓Ş:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:android.content.AttributionSource$Builder org.server.scrcpy.util.FakeContext$$InternalSyntheticApiModelOutline$1$d858a7f2d30237c8117280fe91fb9bee325342e755c1c401eac5534c7cf89049$0.m(android.content.AttributionSource$Builder,java.lang.String):0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.util.FakeContext$$ExternalSyntheticApiModelOutline1 -> org.server.scrcpy.util.oOOooşoOOooವş:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:android.content.AttributionSource org.server.scrcpy.util.FakeContext$$InternalSyntheticApiModelOutline$1$d858a7f2d30237c8117280fe91fb9bee325342e755c1c401eac5534c7cf89049$1.m(android.content.AttributionSource$Builder):0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.util.FakeContext$$ExternalSyntheticApiModelOutline2 -> org.server.scrcpy.util.O000oŠO000o͗Š:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:android.content.AttributionSource$Builder org.server.scrcpy.util.FakeContext$$InternalSyntheticApiModelOutline$4$d858a7f2d30237c8117280fe91fb9bee325342e755c1c401eac5534c7cf89049$0.m(int):0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.util.FakeContext$$ExternalSyntheticApiModelOutline3 -> org.server.scrcpy.util.O00ooťO00ooӂť:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:65535:void org.server.scrcpy.util.FakeContext$$InternalSyntheticApiModelOutline$4$d858a7f2d30237c8117280fe91fb9bee325342e755c1c401eac5534c7cf89049$1.m():0:0 -> oOoOŞoOoO๓Ş
      # {"id":"com.android.tools.r8.synthesized"}
org.server.scrcpy.util.Workarounds -> org.server.scrcpy.util.O0O0oŦO0O0oࢼŦ:
    java.lang.Class ACTIVITY_THREAD_CLASS -> oOoOŞoOoO๓Ş
    java.lang.Object ACTIVITY_THREAD -> oOOooşoOOooವş
    0:65535:void fillAppContext():0:0 -> O000oŠO000o͗Š
    0:65535:void fillAppInfo():0:0 -> O00ooťO00ooӂť
    0:65535:void fillConfigurationController():0:0 -> O0O0oŦO0O0oࢼŦ
    0:65535:android.content.Context getSystemContext():0:0 -> O0OOoŨO0OOoચŨ
    0:65535:void prepareMainLooper():0:0 -> O0Oo0ũO0Oo0ಒũ
    0:65535:android.media.AudioRecord createAudioRecord(int,int,int,int,int,int):0:0 -> oOOooşoOOooವş
    0:65535:void apply():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.wrappers.ActivityManager -> O0O0oŦO0O0oࢼŦ.oOoOŞoOoO๓Ş:
    boolean getContentProviderExternalMethodNewVersion -> O000oŠO000o͗Š
    android.os.IInterface manager -> oOoOŞoOoO๓Ş
    java.lang.reflect.Method forceStopPackageMethod -> O0O0oŦO0O0oࢼŦ
    java.lang.reflect.Method startActivityAsUserMethod -> O00ooťO00ooӂť
    java.lang.reflect.Method getContentProviderExternalMethod -> oOOooşoOOooವş
    0:65535:void <init>(android.os.IInterface):0:0 -> <init>
    0:65535:android.content.IContentProvider getContentProviderExternal(java.lang.String,android.os.IBinder):0:0 -> O000oŠO000o͗Š
    0:65535:java.lang.reflect.Method getForceStopPackageMethod():0:0 -> O00ooťO00ooӂť
    0:65535:java.lang.reflect.Method getGetContentProviderExternalMethod():0:0 -> O0O0oŦO0O0oࢼŦ
    0:65535:java.lang.reflect.Method getStartActivityAsUserMethod():0:0 -> O0OOoŨO0OOoચŨ
    0:65535:int startActivity(android.content.Intent):0:0 -> O0Oo0ũO0Oo0ಒũ
    0:65535:int startActivity(android.content.Intent,android.os.Bundle):0:0 -> O0OooūO0Oooېū
    0:65535:void forceStopPackage(java.lang.String):0:0 -> oOOooşoOOooವş
    0:65535:org.server.scrcpy.wrappers.ActivityManager create():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.wrappers.DisplayManager -> O0O0oŦO0O0oࢼŦ.oOOooşoOOooವş:
    android.os.IInterface manager -> oOoOŞoOoO๓Ş
    java.lang.reflect.Method createVirtualDisplayMethod -> oOOooşoOOooವş
    0:65535:void <init>(android.os.IInterface):0:0 -> <init>
    0:65535:org.server.scrcpy.DisplayInfo getDisplayInfo():0:0 -> O000oŠO000o͗Š
    0:65535:java.lang.reflect.Method getCreateVirtualDisplayMethod():0:0 -> oOOooşoOOooವş
    0:65535:android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.wrappers.InputManager -> O0O0oŦO0O0oࢼŦ.O000oŠO000o͗Š:
    android.os.IInterface manager -> oOoOŞoOoO๓Ş
    java.lang.reflect.Method injectInputEventMethod -> oOOooşoOOooವş
    0:65535:void <init>(android.os.IInterface):0:0 -> <init>
    0:65535:boolean injectInputEvent(android.view.InputEvent,int):0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.wrappers.PowerManager -> O0O0oŦO0O0oࢼŦ.O00ooťO00ooӂť:
    android.os.IInterface manager -> oOoOŞoOoO๓Ş
    java.lang.reflect.Method isScreenOnMethod -> oOOooşoOOooವş
    0:65535:void <init>(android.os.IInterface):0:0 -> <init>
    0:65535:boolean isScreenOn():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.wrappers.ServiceManager -> O0O0oŦO0O0oࢼŦ.O0O0oŦO0O0oࢼŦ:
    java.lang.reflect.Method getServiceMethod -> oOoOŞoOoO๓Ş
    org.server.scrcpy.wrappers.WindowManager windowManager -> oOOooşoOOooವş
    org.server.scrcpy.wrappers.ActivityManager activityManager -> O0OOoŨO0OOoચŨ
    org.server.scrcpy.wrappers.InputManager inputManager -> O00ooťO00ooӂť
    org.server.scrcpy.wrappers.DisplayManager displayManager -> O000oŠO000o͗Š
    org.server.scrcpy.wrappers.PowerManager powerManager -> O0O0oŦO0O0oࢼŦ
    0:65535:void <clinit>():0:0 -> <clinit>
    0:65535:org.server.scrcpy.wrappers.InputManager getInputManager():0:0 -> O000oŠO000o͗Š
    0:65535:org.server.scrcpy.wrappers.PowerManager getPowerManager():0:0 -> O00ooťO00ooӂť
    0:65535:android.os.IInterface getService(java.lang.String,java.lang.String):0:0 -> O0O0oŦO0O0oࢼŦ
    0:65535:org.server.scrcpy.wrappers.WindowManager getWindowManager():0:0 -> O0OOoŨO0OOoચŨ
    0:65535:org.server.scrcpy.wrappers.DisplayManager getDisplayManager():0:0 -> oOOooşoOOooವş
    0:65535:org.server.scrcpy.wrappers.ActivityManager getActivityManager():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.wrappers.SurfaceControl -> O0O0oŦO0O0oࢼŦ.O0OOoŨO0OOoચŨ:
    java.lang.Class CLASS -> oOoOŞoOoO๓Ş
    0:65535:void <clinit>():0:0 -> <clinit>
    0:65535:void destroyDisplay(android.os.IBinder):0:0 -> O000oŠO000o͗Š
    0:65535:void openTransaction():0:0 -> O00ooťO00ooӂť
    0:65535:void setDisplayLayerStack(android.os.IBinder,int):0:0 -> O0O0oŦO0O0oࢼŦ
    0:65535:void setDisplayProjection(android.os.IBinder,int,android.graphics.Rect,android.graphics.Rect):0:0 -> O0OOoŨO0OOoચŨ
    0:65535:void setDisplaySurface(android.os.IBinder,android.view.Surface):0:0 -> O0Oo0ũO0Oo0ಒũ
    0:65535:android.os.IBinder createDisplay(java.lang.String,boolean):0:0 -> oOOooşoOOooವş
    0:65535:void closeTransaction():0:0 -> oOoOŞoOoO๓Ş
org.server.scrcpy.wrappers.WindowManager -> O0O0oŦO0O0oࢼŦ.O0Oo0ũO0Oo0ಒũ:
    android.os.IInterface manager -> oOoOŞoOoO๓Ş
    0:65535:void <init>(android.os.IInterface):0:0 -> <init>
    0:65535:void registerRotationWatcher(android.view.IRotationWatcher):0:0 -> oOoOŞoOoO๓Ş
